{"ast":null,"code":"var _jsxFileName = \"/Users/josemariodev/dev/lambda/BW/CS26LambdaMud/Django_FE/haunted/src/components/Game/map/Map.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\"; //aliases for types of rooms in map object from server\n\nconst roomTypes = {\n  crossable: 1,\n  notCrossable: 2\n};\n\nconst Map = () => {\n  const [mapData, setMapData] = useState(null);\n  const room_size = 100; //size of rooms (squares) in pixels\n\n  const canvas = useRef(null);\n\n  const drawMap = () => {};\n\n  useEffect(() => {\n    axios.get(\"https://advapi.herokuapp.com/api/adv/map\").then(res => {\n      setMapData(Object.values(res.data));\n      canvas.current = React.createElement(\"canvas\", {\n        width: \"2000\",\n        height: \"2000\",\n        ref: canvas,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      });\n    }).catch(err => console.log(err));\n  }, []);\n  if (mapData === null) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Loading map data\");\n  console.log(mapData);\n  return React.createElement(React.Fragment, null);\n};\n\nexport default Map;","map":{"version":3,"sources":["/Users/josemariodev/dev/lambda/BW/CS26LambdaMud/Django_FE/haunted/src/components/Game/map/Map.js"],"names":["React","useState","useEffect","useRef","axios","roomTypes","crossable","notCrossable","Map","mapData","setMapData","room_size","canvas","drawMap","get","then","res","Object","values","data","current","catch","err","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,SAAS,EAAE,CADK;AAEhBC,EAAAA,YAAY,EAAE;AAFE,CAAlB;;AAKA,MAAMC,GAAG,GAAG,MAAM;AACd,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMU,SAAS,GAAG,GAAlB,CAFc,CAES;;AACvB,QAAMC,MAAM,GAAGT,MAAM,CAAC,IAAD,CAArB;;AAEA,QAAMU,OAAO,GAAG,MAAM,CAErB,CAFD;;AAIAX,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAACU,GAAN,CAAU,0CAAV,EACCC,IADD,CACMC,GAAG,IAAI;AACTN,MAAAA,UAAU,CAACO,MAAM,CAACC,MAAP,CAAcF,GAAG,CAACG,IAAlB,CAAD,CAAV;AACAP,MAAAA,MAAM,CAACQ,OAAP,GAAiB;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,MAAM,EAAC,MAA5B;AAAmC,QAAA,GAAG,EAAER,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAjB;AACH,KAJD,EAKCS,KALD,CAKOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALd;AAMH,GAPQ,EAON,EAPM,CAAT;AASA,MAAGb,OAAO,KAAK,IAAf,EACI,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AAEJc,EAAAA,OAAO,CAACC,GAAR,CAAYf,OAAZ;AACA,SAAO,yCAAP;AACH,CAvBD;;AAyBA,eAAeD,GAAf","sourcesContent":["import React, {useState, useEffect, useRef} from \"react\";\nimport axios from \"axios\";\n\n//aliases for types of rooms in map object from server\nconst roomTypes = {\n  crossable: 1,\n  notCrossable: 2\n}\n\nconst Map = () => {\n    const [mapData, setMapData] = useState(null);\n    const room_size = 100; //size of rooms (squares) in pixels\n    const canvas = useRef(null);\n\n    const drawMap = () => {\n\n    }\n\n    useEffect(() => {\n        axios.get(\"https://advapi.herokuapp.com/api/adv/map\")\n        .then(res => {\n            setMapData(Object.values(res.data));    \n            canvas.current = <canvas width=\"2000\" height=\"2000\" ref={canvas}/>\n        })\n        .catch(err => console.log(err));\n    }, []);\n    \n    if(mapData === null)\n        return <p>Loading map data</p>;\n    \n    console.log(mapData);\n    return <></>;\n}\n\nexport default Map"]},"metadata":{},"sourceType":"module"}