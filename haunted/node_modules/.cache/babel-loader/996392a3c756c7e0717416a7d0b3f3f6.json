{"ast":null,"code":"var _jsxFileName = \"/Users/josemariodev/dev/lambda/BW/CS26LambdaMud/Django_FE/haunted/src/components/Game/DirectionPad.js\";\nimport React, { useEffect } from \"react\";\nimport styled from \"styled-components\"; // Images for the direction pad\n\nimport north from \"./assets/north.png\";\nimport south from \"./assets/south.png\";\nimport west from \"./assets/west.png\";\nimport east from './assets/east.png';\n\nconst DirectionPad = () => {\n  // const [, dispatch] = useStateValue();\n  // useEffect(() => {\n  //     const getKeyCode = e => {\n  //         e.preventDefault();\n  //         let keyCode = null;\n  //         let up = document.querySelector(\".north\");\n  //         let left = document.querySelector(\".west\");\n  //         let down = document.querySelector(\".south\");\n  //         let right = document.querySelector(\".east\");\n  //         switch (e.keyCode) {\n  //             case 37:\n  //                 keyCode = \"w\";\n  //                 left.style.transform = \"scale(0.8)\";\n  //                 break;\n  //             case 38:\n  //                 keyCode = \"n\";\n  //                 up.style.transform = \"scale(0.8)\";\n  //                 break;\n  //             case 39:\n  //                 keyCode = \"e\";\n  //                 right.style.transform = \"scale(0.8)\";\n  //                 break;\n  //             case 40:\n  //                 keyCode = \"s\";\n  //                 down.style.transform = \"scale(0.8)\";\n  //                 break;\n  //             default:\n  //                 break;\n  //         }\n  //         movePlayer(dispatch, keyCode);\n  //         setTimeout(() => {\n  //             up.removeAttribute(\"style\");\n  //             down.removeAttribute(\"style\");\n  //             left.removeAttribute(\"style\");\n  //             right.removeAttribute(\"style\");\n  //         }, 100);\n  //     };\n  //     // Add event listener for keyboard press\n  //     window.addEventListener(\"keydown\", getKeyCode);\n  //     // Used to clean up the event listener\n  //     return () => window.removeEventListener(\"keydown\", getKeyCode);\n  // }, [dispatch]);\n  return React.createElement(DirectionPadWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    value: \"n\",\n    onClick: e => movePlayer(dispatch, e.target.value),\n    className: \"north\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    value: \"w\",\n    onClick: e => movePlayer(dispatch, e.target.value),\n    className: \"west\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    value: \"s\",\n    onClick: e => movePlayer(dispatch, e.target.value),\n    className: \"south\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    value: \"e\",\n    onClick: e => movePlayer(dispatch, e.target.value),\n    className: \"east\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }));\n};\n\nexport default DirectionPad;\nconst DirectionPadWrapper = styled.div`\n  display: grid;\n  height: 192px;\n  width: 192px;\n  grid-column: 3 / 4;\n  grid-row: 15 / 20;\n  justify-self: center;\n  align-self: center;\n\n  button {\n    width: 64px;\n    height: 64px;\n    cursor: pointer;\n    border: none;\n    background-color: transparent;\n    outline: none;\n    background-size: cover;\n    background-position: center;\n  }\n\n  button.north {\n    background-image: url(${north});\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 0;\n    grid-row-end: 1;\n  }\n\n  button.west {\n    background-image: url(${west});\n    grid-column-start: 0;\n    grid-column-end: 1;\n    grid-row-start: 1;\n    grid-row-end: 2;\n  }\n\n  button.south {\n    background-image: url(${south});\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 2;\n    grid-row-end: 3;\n  }\n\n  button.east {\n    background-image: url(${east});\n    grid-column-start: 2;\n    grid-column-end: 3;\n    grid-row-start: 1;\n    grid-row-end: 2;\n  }\n\n  button:active {\n    transform: scale(0.8);\n  }\n`;","map":{"version":3,"sources":["/Users/josemariodev/dev/lambda/BW/CS26LambdaMud/Django_FE/haunted/src/components/Game/DirectionPad.js"],"names":["React","useEffect","styled","north","south","west","east","DirectionPad","e","movePlayer","dispatch","target","value","DirectionPadWrapper","div"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACvB;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA,SACI,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,KAAK,EAAC,GADV;AAEI,IAAA,OAAO,EAAEC,CAAC,IAAIC,UAAU,CAACC,QAAD,EAAWF,CAAC,CAACG,MAAF,CAASC,KAApB,CAF5B;AAGI,IAAA,SAAS,EAAC,OAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMI;AACI,IAAA,KAAK,EAAC,GADV;AAEI,IAAA,OAAO,EAAEJ,CAAC,IAAIC,UAAU,CAACC,QAAD,EAAWF,CAAC,CAACG,MAAF,CAASC,KAApB,CAF5B;AAGI,IAAA,SAAS,EAAC,MAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAWI;AACI,IAAA,KAAK,EAAC,GADV;AAEI,IAAA,OAAO,EAAEJ,CAAC,IAAIC,UAAU,CAACC,QAAD,EAAWF,CAAC,CAACG,MAAF,CAASC,KAApB,CAF5B;AAGI,IAAA,SAAS,EAAC,OAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,EAgBI;AACI,IAAA,KAAK,EAAC,GADV;AAEI,IAAA,OAAO,EAAEJ,CAAC,IAAIC,UAAU,CAACC,QAAD,EAAWF,CAAC,CAACG,MAAF,CAASC,KAApB,CAF5B;AAGI,IAAA,SAAS,EAAC,MAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,CADJ;AAwBH,CAzED;;AA2EA,eAAeL,YAAf;AAEA,MAAMM,mBAAmB,GAAGX,MAAM,CAACY,GAAI;;;;;;;;;;;;;;;;;;;;;4BAqBXX,KAAM;;;;;;;;4BAQNE,IAAK;;;;;;;;4BAQLD,KAAM;;;;;;;;4BAQNE,IAAK;;;;;;;;;;CA7CjC","sourcesContent":["import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\n\n// Images for the direction pad\nimport north from \"./assets/north.png\";\nimport south from \"./assets/south.png\";\nimport west from \"./assets/west.png\";\nimport east from './assets/east.png'\n\nconst DirectionPad = () => {\n    // const [, dispatch] = useStateValue();\n\n    // useEffect(() => {\n    //     const getKeyCode = e => {\n    //         e.preventDefault();\n    //         let keyCode = null;\n\n    //         let up = document.querySelector(\".north\");\n    //         let left = document.querySelector(\".west\");\n    //         let down = document.querySelector(\".south\");\n    //         let right = document.querySelector(\".east\");\n\n    //         switch (e.keyCode) {\n    //             case 37:\n    //                 keyCode = \"w\";\n    //                 left.style.transform = \"scale(0.8)\";\n    //                 break;\n    //             case 38:\n    //                 keyCode = \"n\";\n    //                 up.style.transform = \"scale(0.8)\";\n    //                 break;\n    //             case 39:\n    //                 keyCode = \"e\";\n    //                 right.style.transform = \"scale(0.8)\";\n    //                 break;\n    //             case 40:\n    //                 keyCode = \"s\";\n    //                 down.style.transform = \"scale(0.8)\";\n    //                 break;\n    //             default:\n    //                 break;\n    //         }\n\n    //         movePlayer(dispatch, keyCode);\n\n    //         setTimeout(() => {\n    //             up.removeAttribute(\"style\");\n    //             down.removeAttribute(\"style\");\n    //             left.removeAttribute(\"style\");\n    //             right.removeAttribute(\"style\");\n    //         }, 100);\n    //     };\n    //     // Add event listener for keyboard press\n    //     window.addEventListener(\"keydown\", getKeyCode);\n\n    //     // Used to clean up the event listener\n    //     return () => window.removeEventListener(\"keydown\", getKeyCode);\n    // }, [dispatch]);\n    return (\n        <DirectionPadWrapper>\n            <button\n                value=\"n\"\n                onClick={e => movePlayer(dispatch, e.target.value)}\n                className=\"north\"\n            ></button>\n            <button\n                value=\"w\"\n                onClick={e => movePlayer(dispatch, e.target.value)}\n                className=\"west\"\n            ></button>\n            <button\n                value=\"s\"\n                onClick={e => movePlayer(dispatch, e.target.value)}\n                className=\"south\"\n            ></button>\n            <button\n                value=\"e\"\n                onClick={e => movePlayer(dispatch, e.target.value)}\n                className=\"east\"\n            ></button>\n        </DirectionPadWrapper>\n    );\n};\n\nexport default DirectionPad;\n\nconst DirectionPadWrapper = styled.div`\n  display: grid;\n  height: 192px;\n  width: 192px;\n  grid-column: 3 / 4;\n  grid-row: 15 / 20;\n  justify-self: center;\n  align-self: center;\n\n  button {\n    width: 64px;\n    height: 64px;\n    cursor: pointer;\n    border: none;\n    background-color: transparent;\n    outline: none;\n    background-size: cover;\n    background-position: center;\n  }\n\n  button.north {\n    background-image: url(${north});\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 0;\n    grid-row-end: 1;\n  }\n\n  button.west {\n    background-image: url(${west});\n    grid-column-start: 0;\n    grid-column-end: 1;\n    grid-row-start: 1;\n    grid-row-end: 2;\n  }\n\n  button.south {\n    background-image: url(${south});\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 2;\n    grid-row-end: 3;\n  }\n\n  button.east {\n    background-image: url(${east});\n    grid-column-start: 2;\n    grid-column-end: 3;\n    grid-row-start: 1;\n    grid-row-end: 2;\n  }\n\n  button:active {\n    transform: scale(0.8);\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}